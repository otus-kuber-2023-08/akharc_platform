controller:
  replicaCount: 3
  tolerations:
    - key: node-role
      operator: Equal
      value: infra
      effect: NoSchedule

  containerPort:
    http: 80
    https: 443

  config:
    log-format-escape-json: "true"
    log-format-upstream: '{"time_local": "$time_local", "proxy_protocol_addr": "$proxy_protocol_addr","remote_addr": "$remote_addr", "proxy_add_x_forwarded_for":     "$proxy_add_x_forwarded_for", "remote_user": "$remote_user", "request" : "$request", "status": "$status", "body_bytes_sent": "$body_bytes_sent", "http_referer":  "$http_referer", "http_user_agent": "$http_user_agent", "request_length" : "$request_length", "request_time" : "$request_time",
        "proxy_upstream_name": "$proxy_upstream_name", "upstream_addr": "$upstream_addr",  "upstream_response_length": "$upstream_response_length",
        "upstream_response_time": "$upstream_response_time", "upstream_status": "$upstream_status"}'
  hostPort:
    # -- Enable 'hostPort' or not
    enabled: false
    ports:
      # -- 'hostPort' http port
      http: 80
      # -- 'hostPort' https port
      https: 443
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      namespace: nginx-ingress
      namespaceSelector: {}
      scrapeInterval: 30s

  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - nginx-ingress
            topologyKey: kubernetes.io/hostname

  nodeSelector:
    yandex.cloud/node-group-id: cat8mjvjtn6tobi7g0hk
